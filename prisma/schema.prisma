generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dataset {
  id                           String                         @id @db.Char(36)
  updated_on                   BigInt
  created_at                   BigInt
  study_id                     String                         @db.Char(36)
  study                        study                          @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dataset_access               dataset_access?
  dataset_alternate_identifier dataset_alternate_identifier[]
  dataset_consent              dataset_consent?
  dataset_contributor          dataset_contributor[]
  dataset_date                 dataset_date[]
  dataset_de_ident_level       dataset_de_ident_level?
  dataset_description          dataset_description[]
  dataset_funder               dataset_funder[]
  dataset_other                dataset_other?
  dataset_record_keys          dataset_record_keys?
  dataset_related_item         dataset_related_item[]
  dataset_rights               dataset_rights[]
  dataset_subject              dataset_subject[]
  dataset_title                dataset_title[]
  version                      version[]
}

model dataset_access {
  type             String? @db.VarChar
  description      String  @db.VarChar
  url              String  @db.VarChar
  url_last_checked BigInt?
  dataset_id       String  @id @db.Char(36)
  dataset          dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_alternate_identifier {
  id         String  @id @db.Char(36)
  identifier String  @db.VarChar
  type       String? @db.VarChar
  created_at BigInt
  dataset_id String  @db.Char(36)
  dataset    dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_consent {
  type          String? @db.VarChar
  noncommercial Boolean
  geog_restrict Boolean
  research_type Boolean
  genetic_only  Boolean
  no_methods    Boolean
  details       String  @db.VarChar
  dataset_id    String  @id @db.Char(36)
  dataset       dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_contributor {
  id                         String  @id @db.Char(36)
  name                       String  @db.VarChar
  name_type                  String? @db.VarChar
  name_identifier            String  @db.VarChar
  name_identifier_scheme     String  @db.VarChar
  name_identifier_scheme_uri String  @db.VarChar
  creator                    Boolean
  contributor_type           String? @db.VarChar
  affiliations               Json    @db.Json
  created_at                 BigInt
  dataset_id                 String  @db.Char(36)
  dataset                    dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_date {
  id          String  @id @db.Char(36)
  date        BigInt?
  type        String? @db.VarChar
  information String  @db.VarChar
  created_at  BigInt
  dataset_id  String  @db.Char(36)
  dataset     dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_de_ident_level {
  type       String? @db.VarChar
  direct     Boolean
  hipaa      Boolean
  dates      Boolean
  nonarr     Boolean
  k_anon     Boolean
  details    String  @db.VarChar
  dataset_id String  @id @db.Char(36)
  dataset    dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_description {
  id          String  @id @db.Char(36)
  description String  @db.VarChar
  type        String? @db.VarChar
  created_at  BigInt
  dataset_id  String  @db.Char(36)
  dataset     dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_funder {
  id                    String  @id @db.Char(36)
  name                  String  @db.VarChar
  identifier            String  @db.VarChar
  identifier_type       String? @db.VarChar
  identifier_scheme_uri String  @db.VarChar
  award_number          String  @db.VarChar
  award_uri             String  @db.VarChar
  award_title           String  @db.VarChar
  created_at            BigInt
  dataset_id            String  @db.Char(36)
  dataset               dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_other {
  resource_type                String   @db.VarChar
  language                     String?  @db.VarChar
  managing_organization_name   String   @db.VarChar
  managing_organization_ror_id String   @db.VarChar
  size                         String[] @db.VarChar
  standards_followed           String   @db.VarChar
  acknowledgement              String   @db.VarChar
  publisher                    String   @db.VarChar
  dataset_id                   String   @id @db.Char(36)
  dataset                      dataset  @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_record_keys {
  key_type    String? @db.VarChar
  key_details String  @db.VarChar
  dataset_id  String  @id @db.Char(36)
  dataset     dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_related_item {
  id                               String                             @id @db.Char(36)
  type                             String?                            @db.VarChar
  relation_type                    String?                            @db.VarChar
  created_at                       BigInt
  dataset_id                       String                             @db.Char(36)
  dataset                          dataset                            @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  dataset_related_item_contributor dataset_related_item_contributor[]
  dataset_related_item_identifier  dataset_related_item_identifier[]
  dataset_related_item_other       dataset_related_item_other?
  dataset_related_item_title       dataset_related_item_title[]
}

model dataset_related_item_contributor {
  id                      String               @id @db.Char(36)
  name                    String               @db.VarChar
  name_type               String?              @db.VarChar
  creator                 Boolean
  contributor_type        String?              @db.VarChar
  created_at              BigInt
  dataset_related_item_id String               @db.Char(36)
  dataset_related_item    dataset_related_item @relation(fields: [dataset_related_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_related_item_identifier {
  id                      String               @id @db.Char(36)
  identifier              String               @db.VarChar
  type                    String?              @db.VarChar
  metadata_scheme         String?              @db.VarChar
  scheme_uri              String?              @db.VarChar
  scheme_type             String?              @db.VarChar
  created_at              BigInt
  dataset_related_item_id String               @db.Char(36)
  dataset_related_item    dataset_related_item @relation(fields: [dataset_related_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_related_item_other {
  publication_year        BigInt?
  volume                  String               @db.VarChar
  issue                   String               @db.VarChar
  number_value            String               @db.VarChar
  number_type             String?              @db.VarChar
  first_page              String               @db.VarChar
  last_page               String               @db.VarChar
  publisher               String               @db.VarChar
  edition                 String               @db.VarChar
  dataset_related_item_id String               @id @db.Char(36)
  dataset_related_item    dataset_related_item @relation(fields: [dataset_related_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_related_item_title {
  id                      String               @id @db.Char(36)
  type                    String?              @db.VarChar
  title                   String               @db.VarChar
  created_at              BigInt
  dataset_related_item_id String               @db.Char(36)
  dataset_related_item    dataset_related_item @relation(fields: [dataset_related_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_rights {
  id                String  @id @db.Char(36)
  rights            String  @db.VarChar
  uri               String  @db.VarChar
  identifier        String  @db.VarChar
  identifier_scheme String  @db.VarChar
  created_at        BigInt
  dataset_id        String  @db.Char(36)
  license_text      String  @db.VarChar
  dataset           dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_subject {
  id                  String  @id @db.Char(36)
  subject             String  @db.VarChar
  scheme              String  @db.VarChar
  scheme_uri          String  @db.VarChar
  value_uri           String  @db.VarChar
  classification_code String  @db.VarChar
  created_at          BigInt
  dataset_id          String  @db.Char(36)
  dataset             dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dataset_title {
  id         String  @id @db.Char(36)
  title      String  @db.VarChar
  type       String? @db.VarChar
  created_at BigInt
  dataset_id String  @db.VarChar
  dataset    dataset @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model email_verification {
  id         String @id @db.Char(36)
  token      String @db.Char(36)
  created_at String @db.Char(36)
  user_id    String @db.Char(36)
  user       user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model invited_study_contributor {
  email_address String @db.VarChar
  permission    String @db.VarChar
  invited_on    BigInt
  token         String @db.VarChar
  created_at    BigInt
  study_id      String @db.Char(36)
  study         study  @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([email_address, study_id])
}

model notification {
  id         String   @id @db.Char(36)
  title      String?  @db.VarChar
  message    String?  @db.VarChar
  type       String?  @db.VarChar
  target     String?  @db.VarChar
  read       Boolean?
  created_at BigInt
  user_id    String   @db.Char(36)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model participant {
  id                   String                 @id @db.Char(36)
  first_name           String                 @db.VarChar
  last_name            String                 @db.VarChar
  address              String                 @db.VarChar
  age                  String                 @db.VarChar
  created_at           BigInt
  updated_on           BigInt
  study_id             String                 @db.Char(36)
  study                study                  @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  version_participants version_participants[]
}

model study {
  id                           String                        @id @db.Char(36)
  title                        String                        @db.VarChar
  image                        String                        @db.VarChar
  created_at                   BigInt
  updated_on                   BigInt
  dataset                      dataset[]
  invited_study_contributor    invited_study_contributor[]
  participant                  participant[]
  study_arm                    study_arm[]
  study_available_ipd          study_available_ipd[]
  study_contact                study_contact[]
  study_contributor            study_contributor[]
  study_description            study_description?
  study_design                 study_design?
  study_eligibility            study_eligibility?
  study_identification         study_identification[]
  study_intervention           study_intervention[]
  study_ipdsharing             study_ipdsharing?
  study_link                   study_link[]
  study_location               study_location[]
  study_other                  study_other?
  study_overall_official       study_overall_official[]
  study_reference              study_reference[]
  study_sponsors_collaborators study_sponsors_collaborators?
  study_status                 study_status?
}

model study_arm {
  id                String   @id @db.Char(36)
  label             String   @db.VarChar
  type              String?  @db.VarChar
  description       String   @db.VarChar
  intervention_list String[] @db.VarChar
  created_at        BigInt
  study_id          String   @db.Char(36)
  study             study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_available_ipd {
  id         String  @id @db.Char(36)
  identifier String  @db.VarChar
  type       String? @db.VarChar
  url        String  @db.VarChar
  comment    String  @db.VarChar
  created_at BigInt
  study_id   String  @db.Char(36)
  study      study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_contact {
  id              String  @id @db.Char(36)
  name            String  @db.VarChar
  affiliation     String  @db.VarChar
  role            String? @db.VarChar
  phone           String  @db.VarChar
  phone_ext       String  @db.VarChar
  email_address   String  @db.VarChar
  central_contact Boolean
  created_at      BigInt
  study_id        String  @db.Char(36)
  study           study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_contributor {
  permission String @db.VarChar
  user_id    String @db.Char(36)
  created_at BigInt
  study_id   String @db.Char(36)
  study      study  @relation(fields: [study_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, study_id])
}

model study_description {
  brief_summary        String @db.VarChar
  detailed_description String @db.VarChar
  study_id             String @id @db.Char(36)
  study                study  @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_design {
  design_allocation                     String?  @db.VarChar
  study_type                            String?  @db.VarChar
  design_intervention_model             String?  @db.VarChar
  design_intervention_model_description String   @db.VarChar
  design_primary_purpose                String?  @db.VarChar
  design_masking                        String?  @db.VarChar
  design_masking_description            String?  @db.VarChar
  design_who_masked_list                String[] @db.VarChar
  phase_list                            String[] @db.VarChar
  enrollment_count                      Int?
  enrollment_type                       String?  @db.VarChar
  number_arms                           Int?
  design_observational_model_list       String[] @db.VarChar
  design_time_perspective_list          String[] @db.VarChar
  bio_spec_retention                    String?  @db.VarChar
  bio_spec_description                  String?  @db.VarChar
  target_duration                       String?  @db.VarChar
  number_groups_cohorts                 Int?
  study_id                              String   @id @db.Char(36)
  study                                 study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_eligibility {
  gender             String?  @db.VarChar
  gender_based       String?  @db.VarChar
  gender_description String   @db.VarChar
  minimum_age_value  Int?
  maximum_age_value  Int?
  minimum_age_unit   String?  @db.VarChar
  maximum_age_unit   String?  @db.VarChar
  healthy_volunteers String?  @db.VarChar
  inclusion_criteria String[] @db.VarChar
  exclusion_criteria String[] @db.VarChar
  study_population   String   @db.VarChar
  sampling_method    String?  @db.VarChar
  study_id           String   @id @db.Char(36)
  study              study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_identification {
  id                String  @id @db.Char(36)
  identifier        String  @db.VarChar
  identifier_type   String? @db.VarChar
  identifier_domain String  @db.VarChar
  identifier_link   String  @db.VarChar
  secondary         Boolean
  created_at        BigInt
  study_id          String  @db.Char(36)
  study             study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_intervention {
  id                   String   @id @db.Char(36)
  type                 String?  @db.VarChar
  name                 String   @db.VarChar
  description          String   @db.VarChar
  arm_group_label_list String[] @db.VarChar
  other_name_list      String[] @db.VarChar
  created_at           BigInt
  study_id             String   @db.Char(36)
  study                study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_ipdsharing {
  ipd_sharing                 String?  @db.VarChar
  ipd_sharing_description     String   @db.VarChar
  ipd_sharing_info_type_list  String[] @db.VarChar
  ipd_sharing_time_frame      String   @db.VarChar
  ipd_sharing_access_criteria String   @db.VarChar
  ipd_sharing_url             String   @db.VarChar
  study_id                    String   @id @db.Char(36)
  study                       study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_link {
  id         String @id @db.Char(36)
  url        String @db.VarChar
  title      String @db.VarChar
  created_at BigInt
  study_id   String @db.Char(36)
  study      study  @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_location {
  id         String  @id @db.Char(36)
  facility   String  @db.VarChar
  status     String? @db.VarChar
  city       String  @db.VarChar
  state      String  @db.VarChar
  zip        String  @db.VarChar
  country    String  @db.VarChar
  created_at BigInt
  study_id   String  @db.Char(36)
  study      study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_other {
  oversight_has_dmc Boolean
  conditions        String[] @db.VarChar
  keywords          String[] @db.VarChar
  size              BigInt
  study_id          String   @id @db.Char(36)
  study             study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_overall_official {
  id          String  @id @db.Char(36)
  name        String  @db.VarChar
  affiliation String  @db.VarChar
  role        String? @db.VarChar
  created_at  BigInt
  study_id    String  @db.Char(36)
  study       study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_reference {
  id         String  @id @db.Char(36)
  identifier String  @db.VarChar
  type       String? @db.VarChar
  citation   String  @db.VarChar
  created_at BigInt
  study_id   String  @db.Char(36)
  study      study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_sponsors_collaborators {
  responsible_party_type                     String?  @db.VarChar
  responsible_party_investigator_name        String   @db.VarChar
  responsible_party_investigator_title       String   @db.VarChar
  responsible_party_investigator_affiliation String   @db.VarChar
  lead_sponsor_name                          String   @db.VarChar
  collaborator_name                          String[] @db.VarChar
  study_id                                   String   @id @db.Char(36)
  study                                      study    @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model study_status {
  overall_status       String? @db.VarChar
  why_stopped          String  @db.VarChar
  start_date           String? @db.VarChar
  start_date_type      String? @db.VarChar
  completion_date      String? @db.VarChar
  completion_date_type String? @db.VarChar
  study_id             String  @id @db.Char(36)
  study                study   @relation(fields: [study_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model token_blacklist {
  jti     String @id @db.Char(36)
  exp     String @db.VarChar
  user_id String @db.Char(36)
  user    user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                 String               @id @db.Char(36)
  email_address      String               @unique @db.VarChar
  username           String               @unique @db.VarChar
  hash               String               @db.VarChar
  created_at         BigInt
  email_verified     String?              @db.VarChar
  email_verification email_verification[]
  notification       notification[]
  study_contributor  study_contributor[]
  token_blacklist    token_blacklist[]
  user_details       user_details[]
}

model user_details {
  id            String  @id @db.Char(36)
  first_name    String? @db.VarChar
  last_name     String? @db.VarChar
  institution   String? @db.VarChar
  orcid         String? @db.VarChar
  location      String? @db.VarChar
  profile_image String? @db.VarChar
  timezone      String? @db.VarChar
  user_id       String  @db.Char(36)
  user          user    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model version {
  id                   String                 @id @db.Char(36)
  title                String                 @db.VarChar
  published            Boolean
  changelog            String                 @db.VarChar
  updated_on           BigInt
  doi                  String                 @db.VarChar
  created_at           BigInt
  published_on         BigInt
  dataset_id           String                 @db.Char(36)
  dataset              dataset                @relation(fields: [dataset_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  version_participants version_participants[]
  version_readme       version_readme?
}

model version_participants {
  dataset_version_id String      @db.Char(36)
  participant_id     String      @db.Char(36)
  version            version     @relation(fields: [dataset_version_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  participant        participant @relation(fields: [participant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([dataset_version_id, participant_id])
}

model version_readme {
  content    String? @db.VarChar
  version_id String  @id @db.Char(36)
  version    version @relation(fields: [version_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model alembic_version {
  version_num String @id(map: "alembic_version_pkc") @db.VarChar(32)
}
